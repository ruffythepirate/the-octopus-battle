
> the-octopus-battle-server@1.0.0 test
> NODE_OPTIONS=--experimental-vm-modules npx jest

FAIL src/games/gameService.spec.ts
  ● gameService › joinGame › should create a new game if no game is available

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      16 |             let game = joinGame();
      17 |             
    > 18 |             expect(game.players.length).toBe(1);
         |                                         ^
      19 |         });
      20 |
      21 |         it('should join existing game if available', () => {

      at Object.<anonymous> (src/games/gameService.spec.ts:18:41)

  ● gameService › joinGame › should join existing game if available

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 0

      23 |             joinGame();
      24 |             
    > 25 |             expect(game.players.length).toBe(2);
         |                                         ^
      26 |         });
      27 |     });
      28 | });

      at Object.<anonymous> (src/games/gameService.spec.ts:25:41)

{"level":30,"time":1669205941506,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"Setting up socket.io.."}
{"level":30,"time":1669205941549,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player b7d6e54a-e956-47b0-b67d-90aaa90a5f91 connected"}
{"level":30,"time":1669205941559,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player b7d6e54a-e956-47b0-b67d-90aaa90a5f91 requested state"}
PASS src/games/routes.spec.ts
{"level":30,"time":1669205946534,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player 26065e9f-e755-4525-b0f2-0f7a076ac8a6 connected"}
{"level":30,"time":1669205946543,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player da6cc3bc-306c-41fa-829a-0e99ae231fa4 connected"}
{"level":30,"time":1669205946547,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player da6cc3bc-306c-41fa-829a-0e99ae231fa4 requested state"}
FAIL src/games/socketController.spec.ts (14.004 s)
  ● Console

    console.log
      state { players: [], id: '9cb7a58d-247d-47c6-bbe8-e926fb24c879' }

      at Socket.<anonymous> (src/games/socketController.spec.ts:36:25)

    console.log
      state { players: [], id: '9cb7a58d-247d-47c6-bbe8-e926fb24c879' }

      at Socket.<anonymous> (src/games/socketController.spec.ts:50:25)

  ● socketController › should respond to state request

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: 0

      35 |             clientSocket.emit('state', {}, (state) => {
      36 |                 console.log('state', state);
    > 37 |                 expect(state.players.length).toBe(1);
         |                                              ^
      38 |                 resolve({});
      39 |             })
      40 |         });

      at Socket.<anonymous> (src/games/socketController.spec.ts:37:46)
      at Socket.onack (node_modules/socket.io-client/build/cjs/socket.js:418:17)
      at Socket.onpacket (node_modules/socket.io-client/build/cjs/socket.js:344:22)
      at Manager.Object.<anonymous>.Emitter.emit (node_modules/@socket.io/component-emitter/index.js:143:20)
      at node_modules/socket.io-client/build/cjs/manager.js:240:18

  ● socketController › should respond to state request

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      30 |     });
      31 |
    > 32 |     it('should respond to state request', async () => {
         |     ^
      33 |         const clientSocket = await connectClientSocket(port)
      34 |         await new Promise((resolve) => {
      35 |             clientSocket.emit('state', {}, (state) => {

      at src/games/socketController.spec.ts:32:5
      at Object.<anonymous> (src/games/socketController.spec.ts:5:1)

  ● socketController › should join 2nd player to same game

    expect(received).toBe(expected) // Object.is equality

    Expected: 2
    Received: 0

      49 |             secondClientSocket.emit('state', {}, (state) => {
      50 |                 console.log('state', state);
    > 51 |                 expect(state.players.length).toBe(2);
         |                                              ^
      52 |                 resolve({});
      53 |             })
      54 |         });

      at Socket.<anonymous> (src/games/socketController.spec.ts:51:46)
      at Socket.onack (node_modules/socket.io-client/build/cjs/socket.js:418:17)
      at Socket.onpacket (node_modules/socket.io-client/build/cjs/socket.js:344:22)
      at Manager.Object.<anonymous>.Emitter.emit (node_modules/@socket.io/component-emitter/index.js:143:20)
      at node_modules/socket.io-client/build/cjs/manager.js:240:18

  ● socketController › should join 2nd player to same game

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      42 |     });
      43 |
    > 44 |     it('should join 2nd player to same game', async () => {
         |     ^
      45 |         const firstClientSocket = await connectClientSocket(port)
      46 |         const secondClientSocket = await connectClientSocket(port)
      47 |

      at src/games/socketController.spec.ts:44:5
      at Object.<anonymous> (src/games/socketController.spec.ts:5:1)

{"level":30,"time":1669205951532,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player b7d6e54a-e956-47b0-b67d-90aaa90a5f91 disconnected"}
{"level":30,"time":1669205951532,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player 26065e9f-e755-4525-b0f2-0f7a076ac8a6 disconnected"}
{"level":30,"time":1669205951533,"pid":16785,"hostname":"johan-XPS-13-9360","msg":"socket.io: player da6cc3bc-306c-41fa-829a-0e99ae231fa4 disconnected"}
A worker process has failed to exit gracefully and has been force exited. This is likely caused by tests leaking due to improper teardown. Try running with --detectOpenHandles to find leaks. Active timers can also cause this, ensure that .unref() was called on them.
Test Suites: 2 failed, 1 passed, 3 total
Tests:       4 failed, 2 passed, 6 total
Snapshots:   0 total
Time:        14.791 s
Ran all test suites.
npm ERR! Lifecycle script `test` failed with error: 
npm ERR! Error: command failed 
npm ERR!   in workspace: the-octopus-battle-server@1.0.0 
npm ERR!   at location: /home/johan/code/the-octopus-battle/apps/server 
